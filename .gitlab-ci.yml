image: docker:19

stages:
- build dependencies
- build library
- test

variables:
  BUILD_VERSION: v0.2.0

Build Python and Boost:
  stage: build dependencies
  needs: []
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cd dependencies
    - (docker pull registry.gitlab.com/pep10/libsim/pyboost:${BUILD_VERSION} && echo success) || (docker build -t registry.gitlab.com/pep10/libsim/pyboost:$BUILD_VERSION -f BuildDeps.Dockerfile . ) 


Build Catch:
  stage: build dependencies
  needs: []
  script:
    - echo "Done"

Build Magic Enum:
  stage: build dependencies
  needs: []
  script:
    - echo "Done"

Build C++ bindings:
  stage: test
  image: registry.gitlab.com/pep10/libsim/pyboost:${BUILD_VERSION}
  needs: [Build Python and Boost]
  script:
    - source /emsdk/emsdk_env.sh
    - export CXX=/emsdk/llvm/git/build_master_64/bin/clang++
    - export C=/emsdk/llvm/git/build_master_64/bin/clang
    - mkdir build && cd build
    - cmake ../
    - make -j20 && make test

Build emscripten bindings:
  stage: test
  image: registry.gitlab.com/pep10/libsim/pyboost:${BUILD_VERSION}
  needs: [Build Python and Boost]
  script:
    - source /emsdk/emsdk_env.sh
    - mkdir build && cd build
    - emcmake cmake ../
    - emmake make -j20
    - node ./test/libisa/test-lib.js